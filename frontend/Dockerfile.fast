# ==========================
# FAST Build Dockerfile
# ==========================
FROM node:20-alpine AS builder

# Install build dependencies for faster builds
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files first (better caching)
COPY package.json package-lock.json ./

# Use npm ci for faster, deterministic installs
# Mount npm cache to speed up subsequent builds
RUN --mount=type=cache,target=/root/.npm \
    npm ci --prefer-offline --no-audit --progress=false && \
    npm install @rollup/rollup-linux-x64-gnu --no-save

# Copy source code
COPY . .

# Build with optimizations for speed
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
RUN npm run build

# ==========================
# Production Stage
# ==========================
FROM nginx:alpine

# Remove default nginx content
RUN rm -rf /usr/share/nginx/html/*

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
