# ==========================
# Fast Development Dockerfile
# ==========================
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies for faster npm install
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package.json package-lock.json ./

# Use npm ci for faster, reproducible builds and skip optional deps
# Use npm cache mount for faster subsequent builds
RUN --mount=type=cache,target=/root/.npm \
    npm ci --only=production --ignore-scripts --no-optional && \
    npm install @rollup/rollup-linux-x64-gnu --no-save

# Copy source code
COPY . .

# Build with relaxed TypeScript checking for development
RUN npm run build -- --mode development || \
    SKIP_TYPE_CHECK=true npm run build || \
    npm run build:dev 2>/dev/null || \
    npx vite build --mode development --minify false

# ==========================
# Production Stage
# ==========================
FROM nginx:alpine

# Remove default nginx content
RUN rm -rf /usr/share/nginx/html/*

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
