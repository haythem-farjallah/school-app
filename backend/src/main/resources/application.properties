# -----------------------------------------------------
# APPLICATION CONFIG
# -----------------------------------------------------
spring.application.name=school-management-backend
spring.profiles.active=loki-enabled

# -----------------------------------------------------
# SERVER CONFIG
# -----------------------------------------------------
server.port=8088
# spring.config.import=optional:file:./env.properties

server.tomcat.relaxed-query-chars=[,]


# -----------------------------------------------------
# DATABASE (PostgreSQL) & FLYWAY MIGRATIONS
# -----------------------------------------------------
# Connection info for Postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/school_db
spring.datasource.username=postgres
spring.datasource.password=postgres

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=none
# (Set to 'update', 'validate', or 'none' as you prefer.
#  'update' automatically updates schema, but Flyway is recommended for schema changes.)

# Show SQL for debugging
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Flyway migrations
# By default, it will look for SQL scripts under classpath:db/migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.out-of-order=true
spring.flyway.validate-on-migrate=true
spring.flyway.baseline-on-migrate=true
# (If you place your .sql migration files in src/main/resources/db/migration/)

# hikari database info
spring.datasource.hikari.pool-name=db-pool


# -----------------------------------------------------
# ACTUATOR
# -----------------------------------------------------
# Expose specific endpoints if desired
management.endpoints.web.exposure.include=health,info,prometheus,metrics,env,configprops
# (Add more if you want to expose metrics, env, etc.)

# Enable Prometheus metrics
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=10s

# -----------------------------------------------------
# SPRING SECURITY / JWT EXAMPLE
# -----------------------------------------------------
# This is a custom property you might use in your code to sign tokens
# e.g. reading from @Value("${jwt.secret}")
jwt.secret=your_very_long_random_secret_32chars_min12345

# (If you have a custom prefix or expiration, define them similarly:
jwt.token.prefix=Bearer
jwt.expiration.ms=36000000000
jwt.refresh.expiration.ms=36000000000
# -----------------------------------------------------
# SPRINGDOC OPENAPI (Swagger UI)
# -----------------------------------------------------
# By default, you'll have /v3/api-docs and /swagger-ui/index.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# -----------------------------------------------------
# LOGGING (Optional)
# -----------------------------------------------------
# Example: set logging level
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG

# -----------------------------------------------------
# Mailing
# -----------------------------------------------------
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=infosuport2526@gmail.com
spring.mail.password=ytqw xnaz wbit oapl
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8


# -----------------------------------------------------
# Thymeleaf
# -----------------------------------------------------
spring.thymeleaf.prefix=classpath:/templates/email/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# OptaPlanner Configuration
optaplanner.solver.termination.spent-limit=30s
optaplanner.solver.termination.unimproved-spent-limit=10s
optaplanner.solver-manager.parallel-solver-count=4

# -----------------------------------------------------
# FILE UPLOAD CONFIGURATION
# -----------------------------------------------------
# Multipart configuration is handled programmatically in FileUploadConfig.java

# Custom file upload properties
app.file.upload.path=uploads/learning-resources
app.file.upload.max-size=104857600
# Allowed file extensions (comma-separated)
app.file.upload.allowed-extensions=pdf,doc,docx,ppt,pptx,xls,xlsx,txt,mp4,avi,mov,wmv,flv,webm,mkv,jpg,jpeg,png,gif,bmp,svg,webp,mp3,wav,ogg,aac,flac

# -----------------------------------------------------
# REDIS CONFIGURATION
# -----------------------------------------------------
# Redis connection settings - hardcoded for Docker environment
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.database=0
# spring.data.redis.password=your_redis_password_if_needed
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Cache configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=1800000
spring.cache.redis.cache-null-values=false
spring.cache.redis.enable-statistics=true

# Enable Redis health check
management.health.redis.enabled=true

# Disable OptaPlanner only (keep tracing/observation features for monitoring)
spring.autoconfigure.exclude=org.optaplanner.spring.boot.autoconfigure.OptaPlannerAutoConfiguration

# Disable Zipkin tracing to prevent connection errors
management.tracing.zipkin.enabled=false
management.tracing.zipkin.endpoint=

# Disable OptaPlanner services that depend on SolverManager
spring.main.allow-bean-definition-overriding=true

# Loki logging configuration
# To enable Loki logging, set: spring.profiles.active=loki-enabled
# To disable Loki logging, don't set the loki-enabled profile (default behavior)
logging.level.com.github.loki4j=WARN
loki.enabled=false

# -----------------------------------------------------
# DISTRIBUTED TRACING (TEMPO) CONFIGURATION
# -----------------------------------------------------
# Enable distributed tracing for Tempo
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# Enable OpenTelemetry configuration
management.otlp.tracing.enabled=true
management.otlp.tracing.endpoint=http://tempo:4318/v1/traces

# Enable Micrometer tracing configuration
management.tracing.exporters=otlp

# Service name for tracing
spring.application.name=school-management-backend

management.zipkin.tracing.endpoint=http://tempo:9412/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.tracing.sampling.probability=1.0